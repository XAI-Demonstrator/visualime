name: Release to PyPI
on:
  release:
    types: [published]
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'docs/**'

jobs:
  build:
    name: Build Python package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade build

      - name: Build a binary wheel and source tarball
        run: |
          python -m build

      - name: Upload distribution to GitHub cache
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/upload-artifact@v3
        with:
          name: distribution
          path: dist/
          retention-days: 3

  test:
    name: Test package
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: '3.8'
          - python: '3.9'
          - python: '3.10'
          - python: '3.11'
    steps:
      - name: Download distribution
        uses: actions/download-artifact@v3
        with:
          name: distribution

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install package
        run: |
          pip install --upgrade pip
          pip install visualime*.whl

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: repository

      - name: Install test dependencies
        run: |
          pip install -r repository/requirements-test.txt

      - name: Prepare unit tests
        run: |
          mv repository/tests .
          rm -r repository

      - name: Run unit tests against package
        run: |
          pytest tests/

  publish:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags')
    needs:
      - test
    runs-on: ubuntu-latest
    environment: PyPI
    steps:
      - name: Download distribution
        uses: actions/download-artifact@v3
        with:
          name: distribution

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: .
          verbose: true

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: .
          verbose: true
